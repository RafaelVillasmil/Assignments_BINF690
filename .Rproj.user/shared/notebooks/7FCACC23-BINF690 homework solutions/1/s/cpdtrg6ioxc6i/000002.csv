"0",""
"0","# orignal_func and first derivative must be updated according to problem"
"0",""
"0","original_func <- function(x){"
"0","  y <- 10*cos(x)*exp(-1*x/5)-x^(1/3)+1.8"
"0","  return(y)"
"0","}"
"0",""
"0","first_dev <- function(x) {"
"0","  y <- -10*sin(x)*exp(-1*x/5)-2*cos(x)*exp(-1*x/5)-1/(3*x^(2/3))"
"0","  return(y)"
"0","}"
"0",""
"0","# enter Es percentage as a percentage "
"0","Es <- 0.01"
"0",""
"0","Et <- 101"
"0","root_memory <- NA"
"0",""
"0","xi<- 11"
"0",""
"0","counter <- 0"
"0","while (Et > Es){"
"0","  counter <- counter + 1"
"0","#  print(c(counter,Et,root_memory))"
"0","  "
"0","  if (is.na(root_memory)) {root_memory <- xi}"
"0","  "
"0","  root <- root_memory - original_func(root_memory)/first_dev(root_memory)"
"0","  "
"0","  Et <- abs(100* (root_memory - root)/root)"
"0","  "
"0","  root_memory <- root"
"0","}"
"0",""
"0","counter <- counter + 1"
"0","cat(""Steps: "", counter, ""Root: "", root, ""\n"")"
"1","Steps: "
"1"," "
"1","5"
"1"," "
"1","Root: "
"1"," "
"1","11.46252"
"1"," "
"1","
"
