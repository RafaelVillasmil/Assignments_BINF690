"0","# tip graph fuctions and start upwards after a maxima or minimum"
"0",""
"0",""
"0","# orignal_func and first derivative must be upstated according to problem"
"0",""
"0","original_func <- function(x) {"
"0","  y <- -1+5.5*x-4*x^2+0.5*x^3"
"0","  return(y)"
"0","}"
"0",""
"0","first_dev <- function(x) {"
"0","  y <- 5.5-8*x+1.5*x^2"
"0","  return(y)"
"0","}"
"0",""
"0","# enter Es percentage as a percentage "
"0","Es <- 0.01"
"0",""
"0","Et <- 101"
"0","root_memory <- NA"
"0",""
"0","xi<- 5"
"0",""
"0","counter <- 0"
"0","while (Et > Es){"
"0","  counter <- counter + 1"
"0","#  print(c(counter,Et,root_memory))"
"0","  "
"0","  if (is.na(root_memory)) {root_memory <- xi}"
"0","  "
"0","  root <- root_memory - original_func(root_memory)/first_dev(root_memory)"
"0","  "
"0","  Et <- abs(100* (root_memory - root)/root)"
"0","  "
"0","  root_memory <- root"
"0","}"
"0",""
"0","counter <- counter + 1"
"0","cat(c(""Steps: "", counter, ""Root: "", root))"
"1","Steps: "
"1"," "
"1","7"
"1"," "
"1","Root: "
"1"," "
"1","6.30589753078399"
